{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/contact/contact-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contact/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactFilter","createAction","contactDelete","contactAdd","name","number","payload","id","Date","now","connect","state","items","contacts","dispatch","onSubmit","actions","useState","setName","setNumber","className","styles","TaskEditor","e","preventDefault","find","contact","alert","contactValidation","TaskEditor_label","TaskEditor_input","type","value","onChange","target","required","TaskEditor_button","filter","onFilter","filteredContacts","allContacts","normalizedFilter","toLowerCase","includes","onDel","TaskList","map","TaskList_item","TaskList_button","onClick","length","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","PersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","counterReducer","devTools","process","persistor","persistStore","ReactDom","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f57d3918.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__T65-6\",\"TaskList_item\":\"ContactList_TaskList_item__1gtOE\",\"completed\":\"ContactList_completed__3i-RZ\",\"TaskList_text\":\"ContactList_TaskList_text__3CrNI\",\"TaskList_actions\":\"ContactList_TaskList_actions__25RSf\",\"TaskList_button\":\"ContactList_TaskList_button__1mBSv\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport actionType from './contact-types';\r\n\r\nexport const contactFilter = createAction('contacts/filter');\r\nexport const contactDelete = createAction('contacts/delete');\r\n\r\nexport const contactAdd = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: Date.now(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\n// export const contactAdd = (name, number) => {\r\n//   return {\r\n//     type: actionType.ADD,\r\n//     payload: {\r\n//       id: Date.now(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const contactDelete = (id) => {\r\n//   return {\r\n//     type: actionType.DELETE,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// export const conatactFilter = (value) => ({\r\n//   type: actionType.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contact/contact-actions';\r\n\r\nconst ContactForm = ({ onSubmit, items }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const contactValidation = () => {\r\n    if (items.find((contact) => name === contact.name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contactValidation()) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.TaskEditor} onSubmit={handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChangeName}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChangeNumber}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button}> Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmit: (name, number) => dispatch(actions.contactAdd(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contact/contact-actions';\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (e) => dispatch(actions.contactFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contact/contact-actions';\r\n\r\nconst ContactList = ({ onDel, contacts }) => {\r\n  return (\r\n    <ul className={styles.TaskList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.TaskList_item} key={id}>\r\n          {name} : {number}\r\n          {\r\n            <button\r\n              className={styles.TaskList_button}\r\n              type=\"button\"\r\n              name=\"delte\"\r\n              onClick={() => onDel(id)}\r\n            >\r\n              delete\r\n            </button>\r\n          }\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  // contacts: PropTypes.arrayOf(\r\n  //   PropTypes.shape({\r\n  //     id: PropTypes.string.isRequired,\r\n  //     name: PropTypes.string.isRequired,\r\n  //     number: PropTypes.string,\r\n  //   })\r\n  // ),\r\n  onDel: PropTypes.func.isRequired,\r\n};\r\n\r\nconst filteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: filteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDel: (id) => dispatch(actions.contactDelete(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, items } = state.contacts;\r\n//   const visibleTodos = filteredContacts(items, filter);\r\n\r\n//   return {\r\n//     items: visibleTodos,\r\n//   };\r\n// };\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst App = ({ items }) => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {items.length > 1 && <Filter />}\n      <ContactList />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    items: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { contactAdd, contactDelete, contactFilter } from './contact-actions';\r\n// import actionType from './contact-types';\r\n\r\nconst contactinitialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(contactinitialState, {\r\n  [contactAdd]: (state, { payload }) => [payload, ...state],\r\n  [contactDelete]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// const items = (state = contactinitialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionType.ADD:\r\n//       return [payload, ...state];\r\n\r\n//     case actionType.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionType.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport counterReducer from './contact/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst PersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persisterReducer(PersistConfig, counterReducer),\r\n// });\r\n\r\n// const persisterReducer = persistReducer(PersistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(PersistConfig, counterReducer),\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// import { applyMiddleware, combineReducers } from 'redux';\r\n// const rootReducer = combineReducers({\r\n//   contacts: counterReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filters: '',\r\n//   },\r\n// };\r\n\r\n// const reducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'contacts/add':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: [payload, ...state.contacts.items],\r\n//         },\r\n//       };\r\n\r\n//     case 'contacts/delete':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: state.contacts.items.filter(({ id }) => id !== payload),\r\n//         },\r\n//       };\r\n\r\n//     case 'contacts/filter':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: state.contacts.items.filter((name) =>\r\n//             name.toLowerCase().includes(state.contacts.filters.toLowerCase())\r\n//           ),\r\n//         },\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nReactDom.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__2jMT1\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__2IKes\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__3Ghrd\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__3skbh\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__2RM3h\"};"],"sourceRoot":""}